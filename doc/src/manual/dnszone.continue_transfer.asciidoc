= dnszone:continue_transfer
Lauri Moisio <l@arv.io>
Version 0.0.2, 2019.01.29
:ext-relative: {outfilesuffix}

== Name

dnszone:continue_transfer - Continue an ongoing zone transfer

== Description

[source,erlang]
----
continue_transfer(Response :: dnsmsg:message(), State :: opaque())
    -> {'more', State :: opaque()};
     | {'ok',
           {'zone', NewSoa :: dnslib:resource(), [dnslib:resource()]}
         | {'change_sets', NewSoa :: dnslib:resource(), [dnsmsg:incremental_transfer_change_set()]}
       }
     | {'error',
           'unexpected_transfer_type'
         | 'unexpected_answer_type'
       }.
----

Continue an ongoing zone transfer.

== Arguments

Response::

Response to a zone transfer request

State::

State returned by previous `dnszone:new_transfer` or `dnszone:continue_transfer` call

== Return value

If `Result` completed the zone transfer, a tuple consisting of `'ok'` and a tuple containing the results of the zone transfer is returned.

If zone transfer is still not complete, a tuple consisting of `'more'` and an opaque state is returned. This state is to be used in further `dnszone:continue_transfer` calls.

If an error occurred, a tuple consisting of `'error'` and the error reason is returned.

== Errors

`'unexpected_transfer_type'`::

Zone transfer type -- normal or incremental -- changed in the middle of the transfer.

`'unexpected_answer_type'`::

`Result` was not a part of an incomplete zone transfer

== Completed transfers

Depending on the first member of the result tuple returned when a transfer is complete, contained terms might require further processing.

If the first member of the result tuple is `'zone'`, it is possible to just add `NewSoa` to the list of resources and the resulting list represents the transferred zone.

If the first member of the result tuple is `'change_sets'`, results are groups of removed and added resource records. These results should then be used to modify some existing zone.

== Changelog

* *0.0.2* First argument is `dnslib:message()` instead of `dnsmsg:interpret_result()`. *Backwards incompatible change*
* *0.0.1* Function added

== See also

link:dnszone.new_transfer{ext-relative}[dnszone:new_transfer],
link:dnszone{ext-relative}[dnszone]
