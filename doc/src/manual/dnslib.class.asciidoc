= dnslib:class
Lauri Moisio <l@arv.io>
Version 0.0.2, 2019.04.12
:ext-relative: {outfilesuffix}

== Name

dnslib:class - Create a class term

== Description

[source,erlang]
----
class(Input :: string() | 0..16#FFFF | atom()) -> dnclass:class().
----

Create a class term.

== Arguments

Input::

Can be an integer, a string or an atom representation of a class.

== Return value

On success the class is returned as its correct internal representation.

This function can throw `error:badarg` in the following cases:

* `Input` is an unknown string
* `Input` is an unknown atom
* `Input` is an integer value outside the allowed range


== Examples

[source,erlang]
----
in = dnslib:class("IN"),
in = dnslib:class("CLASS1"),
in = dnslib:class(1),
in = dnslib:class(in),
in = dnslib:class(dnsclass_in), % Module responsible for the class

% An unknown type
2000 = dnslib:class("CLASS2000"),
2000 = dnslib:class(2000).
----

.Errors
[source,erlang]
----
{'EXIT', {badarg, _}} = (catch dnslib:class(-1)), % Invalid value
{'EXIT', {badarg, _}} = (catch dnslib:class("CLASSROOM")), % Invalid string
{'EXIT', {badarg, _}} = (catch dnslib:class(unknown_atom)). % Unknown atom
----

== Changelog

* *0.0.2* Function added

== See also

link:dnslib.domain{ext-relative}[dnslib:domain],
link:dnslib.type{ext-relative}[dnslib:type],
link:dnslib.question{ext-relative}[dnslib:question],
link:dnslib.resource{ext-relative}[dnslib:resource],
link:dnslib{ext-relative}[dnslib]
